// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_DATABASE_URL")
  directUrl = env("POSTGRES_DATABASE_URL_NON_POOLING")
}

enum Role {
  DEVICE_WRITER
  ADMIN
  VIEWER
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(VIEWER)
  apiKeys   ApiKey[]
}

model ApiKey {
  id        String   @id @default(cuid())
  hashedKey String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model AirQualityMeasurement {
  id                String   @id @default(cuid())
  timestamp         DateTime @default(now())
  rco2              Float
  tvocIndex         Float
  tvocRaw           Float
  noxIndex          Float
  noxRaw            Float
  pm01              Float
  pm02              Float
  pm10              Float
  pm01Standard      Float
  pm02Standard      Float
  pm10Standard      Float
  pm003Count        Float
  pm005Count        Float
  pm01Count         Float
  pm02Count         Float
  pm02Compensated   Float
  atmp              Float
  atmpCompensated   Float
  rhum              Float
  rhumCompensated   Float
}
